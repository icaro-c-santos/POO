package Telas;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.text.MaskFormatter;

import DAOs.Dao_Disciplina;
import DAOs.Dao_Professor;
import DAOs.Dao_Turma;
import Utilitarios.Utilitario;
import entidades.Disciplina;
import entidades.Professor;
import entidades.Turma;

import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.SwingConstants;
import javax.swing.JButton;
import javax.swing.JFormattedTextField;

import java.awt.event.ActionListener;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;


public class Tela_Diretor_Turma_Cadastro extends JFrame {
	public void alert(String mensagem) {
		JOptionPane.showMessageDialog(null,mensagem);
	
	}
	public void sucess(String mensagem) {
		JOptionPane.showInternalMessageDialog(null, mensagem);
	}
	private JPanel contentPane;
	private Utilitario utilitario = new Utilitario();

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Tela_Diretor_Turma_Cadastro frame = new Tela_Diretor_Turma_Cadastro();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Tela_Diretor_Turma_Cadastro() {
		
		setBounds(100, 100, 776, 596);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		getContentPane().setLayout(null);
		
		JPanel panel = new JPanel();
		panel.setBounds(10, 87, 744, 463);
		getContentPane().add(panel);
		panel.setLayout(null);
		
		
		MaskFormatter mask = null;
		try {
			mask = new MaskFormatter("###########");
		} catch (ParseException e) {
			e.printStackTrace();
		}
		
		
		JTextField textField =  new JFormattedTextField(mask);
		textField.setBounds(355, 113, 121, 25);
		panel.add(textField);
		textField.setColumns(10);
		
		
		
		
		JLabel lblNewLabel = new JLabel("CODIGO DA DISCIPLINA:");
		lblNewLabel.setVerticalAlignment(SwingConstants.BOTTOM);
		lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblNewLabel.setBounds(185, 107, 164, 25);
		panel.add(lblNewLabel);
		
		JLabel lblCodigoDoProfessor = new JLabel("CODIGO DO PROFESSOR:");
		lblCodigoDoProfessor.setVerticalAlignment(SwingConstants.BOTTOM);
		lblCodigoDoProfessor.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCodigoDoProfessor.setBounds(174, 170, 164, 25);
		panel.add(lblCodigoDoProfessor);
		
		JTextField textField_1 =  new JFormattedTextField(mask);
		textField_1.setColumns(10);
		textField_1.setBounds(355, 176, 121, 25);
		panel.add(textField_1);
		
		JButton btnNewButton = new JButton("CRIAR TURMA");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					
			
				List<String> msgErro = new ArrayList<String>();
				String codigoDisciplina = textField.getText();
				String codigoProfessor = textField_1.getText();
				
				if(!utilitario.valideCodigo(codigoProfessor)) { msgErro.add("ERRO: CODIGO DO PROFESSOR INVALIDO!");}
				if(!utilitario.valideCodigo(codigoDisciplina)) {msgErro.add("ERRO: CODIGO DA DISCIPLINA INVALIDO!");}
				
				Dao_Disciplina dao_disciplina = new Dao_Disciplina();
				Dao_Professor dao_professor = new Dao_Professor();
				Dao_Turma  dao_turma = new Dao_Turma();
				Turma turma = null;
				if(msgErro.isEmpty()) {
					Professor professor = dao_professor.getProfessorMatricula(Long.parseLong(codigoProfessor));
					Disciplina disciplina = dao_disciplina.getDisciplinaCodigo(Long.parseLong(codigoDisciplina));	
					if(professor==null) {msgErro.add("ERRO: PROFESSOR NÃO ENCONTRADO!");}
					if(disciplina==null) {msgErro.add("ERRO: DISCIPLINA NÃO ENCONTRADA!");}
					if(!msgErro.isEmpty()) {turma = new Turma(disciplina, professor);}
					if(turma == null) {msgErro.add("ERRO NO SISTEMA, TURMA NÃO CRIADA!");}
				}
				
				if(msgErro.isEmpty()) {
					
					Object[] options = { "Sim", "Não" }; 
			        int op =  JOptionPane.showOptionDialog(null, turma.toString()+" \n DESEJA CRIAR ESSA TURMA? \n \n", "CRIAR TURMA", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
			        if(op==0) {
			        	Long codigoTumra = dao_turma.saveTurma(turma);
			        	if(codigoTumra>0) {
	
			            	sucess("ALUNO ALTERADO COM SUCESSO!");
			            			
			            }else {
			            	alert("ERRO! O ALUNO NÃO FOI ALTERADO");
			            }
			        			 
			        }	
						
					
					
				}else {
					 String erro ="";
		    			
			    		for (int i=0; i< msgErro.size(); i++) {
			    			erro = erro+"\n"+msgErro.get(i);
			    		}
			    		alert(erro);
			    		msgErro.clear();
				}


				} catch (Exception e2) {
						alert("ERRO NO SISTEMA!\n"+e2.getMessage());
				}
				
				
			}
		});
		btnNewButton.setBounds(279, 258, 121, 31);
		panel.add(btnNewButton);
		
		
	}
}
