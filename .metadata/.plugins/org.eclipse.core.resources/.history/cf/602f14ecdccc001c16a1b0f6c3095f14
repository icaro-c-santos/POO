package Utilitarios;

import java.time.LocalDate;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Utilitario {
	
	
	public boolean validarCpf(String cpf) {
			if(cpf.isEmpty() || cpf == null || cpf.length()<11) {
				return false;
			}
			 boolean valid;
		        
		        String regex = "([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})";
		        Pattern pattern = Pattern.compile(regex);
		        Matcher matcher = pattern.matcher(cpf);
		        valid =  matcher.matches();
		        return valid;
	}
	
	public boolean validarEmail(String email) {
			 if(email.isEmpty() || email == null) {
				 return false;
			 }
		    boolean valid;
	        
	        String regex = "^[\\w!#$%&’+/=?`{|}~^-]+(?:\\.[\\w!#$%&’+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";

	        Pattern pattern = Pattern.compile(regex);

	        Matcher matcher = pattern.matcher(email);
	        valid =  matcher.matches();
	        return valid;
	}
	
	
	public boolean valideMatricula(String matricula) {
		Long a =Long.parseLong(matricula);
		if(a.intValue())
		return true;
	}
	
	public boolean valideNome(String nome) {
		if(nome.isEmpty() || nome.length()<4) {
			return false;
		}	
		return true;
	}

	public boolean ValideIdade(String data) {
		
		return true;
	}
	
	
	public boolean ValideDate(LocalDate data) {
		
	  	LocalDate dateMin = LocalDate.of(1900, 01, 01);
	  	LocalDate dateMax = LocalDate.now();
	  	if(data == null  || data.isAfter(dateMax) || data.isBefore(dateMin)) {
    	   return false;
    	}
		return true;
	}
	
	
	
	
	
	
}
